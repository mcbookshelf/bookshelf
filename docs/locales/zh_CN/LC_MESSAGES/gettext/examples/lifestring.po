# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Gunivers
# This file is distributed under the same license as the Bookshelf package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bookshelf \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-28 11:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../../../examples/lifestring.md:2 9c0457fe2b0e4011bb45a29d492fad9a
msgid "üßµ Lifestring"
msgstr ""

#: ../../../../examples/lifestring.md:4 ca8343eba4ae48eb83df59dbc13ac834
msgid ""
"This example showcases a **lifestring** system, built using the "
"`bs.health` module of Bookshelf. The system links multiple players' "
"health, so any health change made to one player is automatically applied "
"to all others."
msgstr ""

#: ../../../../examples/lifestring.md:6 2dbe1b9c32a44d0e83712ac89b3fbbfa
msgid ""
"By default, Minecraft lacks a reliable way to heal a player by a specific"
" amount, and workarounds can lead to timing issues. Bookshelf solves this"
" by ensuring health updates are consistent, allowing you to retrieve the "
"current health at any point in the tick, even with pending changes, "
"without worrying about tick safety."
msgstr ""

#: ../../../../examples/lifestring.md:10 536d8211909149268e0f048ecfb50a72
msgid "üéØ What We'll Build"
msgstr ""

#: ../../../../examples/lifestring.md:12 ed066f0580ca453cbf094a1ae2030263
msgid "Our lifestring system will:"
msgstr ""

#: ../../../../examples/lifestring.md:13 2152bef093424622bd0a59c1c8e7cb33
msgid "Detect when a player's health changes"
msgstr ""

#: ../../../../examples/lifestring.md:14 a023a2d403df4691a151003548aa1776
msgid "Find all other players who are linked to that player"
msgstr ""

#: ../../../../examples/lifestring.md:15 f07bc536624c4afba39b464a197b8615
msgid "Propagate the health change across all linked players"
msgstr ""

#: ../../../../examples/lifestring.md:19 948f973ceaa742aea61d6913d269e0e1
msgid "üì¶ Requirements"
msgstr ""

#: ../../../../examples/lifestring.md:21 2e481f13542e459f84c4540a41843476
msgid "Before we begin, make sure you have:"
msgstr ""

#: ../../../../examples/lifestring.md:23 b552d65d65e543c7aee40447d8ffbcc9
msgid "Minecraft Java Edition"
msgstr ""

#: ../../../../examples/lifestring.md:24 f771c629be26406c9880ec9d92109592
msgid ""
"A basic understanding of Minecraft datapacks, including functions, tags, "
"and scoreboards"
msgstr ""

#: ../../../../examples/lifestring.md:25 db2f05883f974a56957d493aaeeed431
msgid ""
"The Bookshelf `bs.health` module installed (see "
"[Quickstart](https://docs.mcbookshelf.dev/en/latest/quickstart.html) for "
"instructions)"
msgstr ""

#: ../../../../examples/lifestring.md:26 66f90c1d743b426a8272dc7686b30f8c
msgid "`@require bookshelf.module.health`"
msgstr ""

#: ../../../../examples/lifestring.md:30 fe5026a7de75462aaddb2abbc2b3dfa5
msgid "üõ†Ô∏è Step-by-Step Guide"
msgstr ""

#: ../../../../examples/lifestring.md:32 234d77726e2d4b93bf64c3a6dc18af21
msgid "1. Prepare the Datapack"
msgstr ""

#: ../../../../examples/lifestring.md:34 ed165e9d536841e7806963cf312f0268
msgid ""
"First, we need a function that runs when your datapack is loaded. We'll "
"name it `lifestring:load` and register it in the `minecraft:load` tag. "
"This function will set up the necessary objectives."
msgstr ""

#: ../../../../examples/lifestring.md:38 a5239d8fa5524be3a0edf6009b845b39
msgid "**‚ûî create the `load` function**"
msgstr ""

#: ../../../../examples/lifestring.md:40 ../../../../examples/lifestring.md:99
#: 71f817315ecc485fb702597b35376d4a b3fec967561a40d4bb80d6bd6c5f62d7
msgid "`@function lifestring:load`"
msgstr ""

#: ../../../../examples/lifestring.md:46 63af51367a0d477385c08e7d3310ddb9
msgid ""
"*`lifestring.link`*: Stores the link ID for each player. Players with the"
" same ID will share health."
msgstr ""

#: ../../../../examples/lifestring.md:47 36021ce591c94034a1a6a15d7c6c9a9d
msgid ""
"*`lifestring.health`*: Stores each player's health from the previous "
"tick, so we can detect changes."
msgstr ""

#: ../../../../examples/lifestring.md:49 48b774313ac248f1a49d45f0a70bb34d
msgid "**‚ûî register it in the `load` tag**"
msgstr ""

#: ../../../../examples/lifestring.md:51 dd0c1b657c8f45958bc37ff7c617d730
msgid "`@function_tag minecraft:load`"
msgstr ""

#: ../../../../examples/lifestring.md:60 8b6a38af29d2486da69c09fec022d8c8
msgid ""
"Adding `lifestring:load` to this tag ensures it runs automatically "
"whenever the datapack is enabled or reloaded."
msgstr ""

#: ../../../../examples/lifestring.md:64 49dc19e33a8e4f7a87e2cdde9307a7d3
msgid "2. Link Players Together"
msgstr ""

#: ../../../../examples/lifestring.md:67 c6eeb64e7b2e4893b3c83d18ab1d6cf9
msgid ""
"To make two players share health, they need the same *`lifestring.link`* "
"score. We'll create a function called `lifestring:create_link_ata`. The "
"\"ata\" part stands for \"as to at\", a Bookshelf convention for "
"functions that run in the context of one entity (*`as`*) while targeting "
"another (*`at`*). This makes it easy to link one player to another with a"
" single command:"
msgstr ""

#: ../../../../examples/lifestring.md:73 9898dce42df24d49bd7e9d06a843926f
msgid "**‚ûî create the `create_link_ata` function**"
msgstr ""

#: ../../../../examples/lifestring.md:75 44df6f2888c84b66a02418e281629688
msgid "`@function lifestring:create_link_ata`"
msgstr ""

#: ../../../../examples/lifestring.md:85 abf9bb0eef6c4ae089517a4fdef2b59a
msgid ""
"This function first check if the target player (*`@p`*) already has a "
"link ID. If not, it gives them a new one by incrementing a global "
"*`#counter`* score. Then, it copies that link ID from the target player "
"(*`@p`*) to the source player (*`@s`*)."
msgstr ""

#: ../../../../examples/lifestring.md:89 fece4da249874db59b9a0956b08d4172
msgid "3. Detect Health Changes"
msgstr ""

#: ../../../../examples/lifestring.md:91 4217ef9b6ccf45deb837d7aca902a3eb
msgid ""
"We need a function that constantly checks if a player's health has "
"changed. We'll create a function called `lifestring:tick` that schedules "
"itself every tick, and a function `lifestring:check` that runs for each "
"player."
msgstr ""

#: ../../../../examples/lifestring.md:93 3cc181d3716948108e38261885c3181c
msgid ""
"The `lifestring:check` function will compare the player's current health "
"to the health stored from the previous tick (*`@s lifestring.health`*). "
"If there's a difference, it will run `lifestring:change`."
msgstr ""

#: ../../../../examples/lifestring.md:97 e15e896f28444c1da749d94c4bc02ca2
msgid "**‚ûî update the `load` function**"
msgstr ""

#: ../../../../examples/lifestring.md:106 e6cc6ee1a34542fa9144fbca7f20f6c8
msgid "**‚ûî create the `tick` function**"
msgstr ""

#: ../../../../examples/lifestring.md:108 d3149a84b31a4962895292eeb887ca70
msgid "`@function lifestring:tick`"
msgstr ""

#: ../../../../examples/lifestring.md:114 40dfb6d19990458aac32f9c764e28951
msgid "**‚ûî create the `check` function**"
msgstr ""

#: ../../../../examples/lifestring.md:116 b39bb15b4e3b4527afaa458e7e7cb859
msgid "`@function lifestring:check`"
msgstr ""

#: ../../../../examples/lifestring.md:124 079b1f0397ce4866aa20a1f967cc633c
msgid ""
"We get the current health (with a scaling of 1000, which we'll use for "
"health in this system), then subtract the previous health to obtain the "
"difference in *`#this`*. If the score is not 0 then the health changed "
"and we run the change function. The second if check is here to ensure the"
" player has a *`lifestring.health`* score. Then we add this change to the"
" player's health score."
msgstr ""

#: ../../../../examples/lifestring.md:126 088e58361b8f4ba390a18de75c07ebda
msgid "**‚ûî create the `change` function**"
msgstr ""

#: ../../../../examples/lifestring.md:128
#: ../../../../examples/lifestring.md:177
#: ../../../../examples/lifestring.md:187
#: ../../../../examples/lifestring.md:206 20ba100266414d8991ae695262fb2ce5
#: 48aa479150704bce9c26c1b70c8cdaf1 851047bb94ec4ce8890cf215bd392512
#: b652e7defc484c97883b6d80e161b86f
msgid "`@function lifestring:change`"
msgstr ""

#: ../../../../examples/lifestring.md:133 4101fa0be2d34a998441bb79bb088b69
msgid ""
"Now, whenever a linked player's health changes, the `lifestring:change` "
"function is triggered, and you'll see a message in chat from that player."
msgstr ""

#: ../../../../examples/lifestring.md:137 18fd0fd1f1a04557b40101b4aa712729
msgid "4. Find Linked Players"
msgstr ""

#: ../../../../examples/lifestring.md:139 d49c87c48f564705a91105cbfdc1d487
msgid ""
"Now that we know when a player's health changes, we need to find all "
"other players who have the same *`lifestring.link`* score. We can do this"
" using a predicate."
msgstr ""

#: ../../../../examples/lifestring.md:143 785325dbc2ba4fa18db503a1c6c4eddc
msgid "**‚ûî create the `is_linked` predicate**"
msgstr ""

#: ../../../../examples/lifestring.md:145 b0ea6eb077484cfab67168ac7be3ae99
msgid "`@predicate lifestring:is_linked`"
msgstr ""

#: ../../../../examples/lifestring.md:173 38fada8b75a44b2eb1ef198a07064697
msgid ""
"This predicate checks if the *`lifestring.link`* score of the entity "
"being evaluated (`\"this\"`) is equal to the *`lifestring.link`* score "
"stored in a temporary score named *`#this`*."
msgstr ""

#: ../../../../examples/lifestring.md:175
#: ../../../../examples/lifestring.md:185
#: ../../../../examples/lifestring.md:204 5a14ffc57c60409c9602addfe57261af
#: b7c300d220094f45b3ad8198507b18a3 ca9c077e081f4d0c9bfce86b6fde4f17
msgid "**‚ûî update the `change` function**"
msgstr ""

#: ../../../../examples/lifestring.md:183 d0700fab9cc34b95a074b1b50df5b30a
msgid ""
"Now, when a player's health changes, all linked players will say \"Health"
" Changed!\". However, we only want to update the health of the other "
"linked players, not the one whose health changed. To do this, we can "
"temporarily swap the *`#this`* score with the link ID of the player whose"
" health changed."
msgstr ""

#: ../../../../examples/lifestring.md:194 9529c7e88137433a8293683bceb3e212
msgid ""
"The *`><`* operator swaps the scores. So, we first swap the *`#this`* "
"score with the player's link ID, then we find all linked players "
"(excluding the original player because their link ID is now in "
"*`#this`*), make them say the message, and then swap the scores back to "
"normal."
msgstr ""

#: ../../../../examples/lifestring.md:198 3f0cc8ff709e4a7a8983d9c2e3681cfe
msgid "5. Update Players Health"
msgstr ""

#: ../../../../examples/lifestring.md:200 0c115670e4544c399d3f06f597fd9f1f
msgid ""
"Now we'll apply the health change to all the linked players. We'll do "
"this by using the health difference stored in *`#this`* and applying it "
"using Bookshelf's `#bs.health:add_health` function in a new "
"`lifestring:update` function."
msgstr ""

#: ../../../../examples/lifestring.md:215 51a69ad81ff64ad5bbffc7509650dc8c
msgid "**‚ûî create the `update` function**"
msgstr ""

#: ../../../../examples/lifestring.md:217
#: ../../../../examples/lifestring.md:227 4a889c4c9271411dadd5b15437891051
#: 868a5c4a44f545e1b4fede04df6c392a
msgid "`@function lifestring:update`"
msgstr ""

#: ../../../../examples/lifestring.md:223 cb9f64cc9bb744b0a66766cfbeb01fa3
msgid ""
"However, there‚Äôs a potential issue with this approach. The "
"`#bs.health:add_health` function cannot heal more than the player's "
"maximum health. Since we're not limiting the *`lifestring.health`* score,"
" we might run into trouble if it exceeds the player's max health. To "
"ensure this doesn‚Äôt happen, we need to define a maximum health value for "
"the score."
msgstr ""

#: ../../../../examples/lifestring.md:225 981f0df0c6ea43dcae1c21c94341614c
msgid "**‚ûî update the `update` function**"
msgstr ""

#: ../../../../examples/lifestring.md:235 35e3cc1ac2e5446a980852f5b0d5941c
msgid ""
"The *`<`* operator sets the score to the minimum value, ensuring *`@s "
"lifestring.health`* does not exceed *`#max lifestring.health`*."
msgstr ""

#: ../../../../examples/lifestring.md:239 19f792e86491455581d789204660cbb3
msgid "‚úîÔ∏è Conclusion"
msgstr ""

#: ../../../../examples/lifestring.md:241 07c57d08dbbf456aaa29b317c1d514d1
msgid ""
"The system is a great example of how Bookshelf simplifies tasks that "
"might otherwise seem complex. It now makes linked players share the "
"damage and healing they receive. But there are many ways you could make "
"this system even better! Here are some ideas to think about:"
msgstr ""

#: ../../../../examples/lifestring.md:243 7d252e8f99764e158c90ebd35e05f7b2
msgid ""
"**Different Starting Health:** What if linked players have different "
"amounts of health to begin with? Should they all end up with the same "
"health percentage, or the same exact health points?"
msgstr ""

#: ../../../../examples/lifestring.md:244 a829a9df427f4988b75535b1b455dc72
msgid ""
"**Maximum Health:** Should linked players add up their maximum health "
"together? If one player's max health changes (for example, from an effect"
" or item), how should that affect the others?"
msgstr ""

#: ../../../../examples/lifestring.md:245 e8480dab6e5c41f7ab05a2e546033997
msgid ""
"**Player Login:** What happens when a linked player leaves the game and "
"comes back? Should their health be saved and synced with the group?"
msgstr ""

#: ../../../../examples/lifestring.md:247 30eea65edb994b2db50c268cd0c3b6fd
msgid ""
"Try experimenting with these ideas to make the lifestring system work the"
" way you want it to!"
msgstr ""

#: ../../../_templates/comments.md:4 759cf5599c114c0e867b3e4d65691c51
msgid "**üí¨ Did it help you?**"
msgstr ""

#: ../../../_templates/comments.md:6 098ec00acf4a40ae914f7440e4b05abb
msgid "Feel free to leave your questions and feedback below!"
msgstr ""

