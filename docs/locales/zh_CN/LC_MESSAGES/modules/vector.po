# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Gunivers
# This file is distributed under the same license as the Bookshelf package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bookshelf \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-24 18:44+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../modules/vector.md:1 8a9bbcccbc2a4a6497c94a5117d677b8
msgid "‚û°Ô∏è Vector"
msgstr ""

#: ../../modules/vector.md:3 bdfe777f5d9948459db87ff1cad5850d
msgid "**`#bs.vector:help`**"
msgstr ""

#: ../../modules/vector.md:5 399ef14582144b7dbf3fc20066710b86
msgid ""
"Vectors are fundamental and incredibly powerful tools to manage motions, "
"forces and... well... do physics!"
msgstr ""

#: ../../modules/vector.md:18 2382499f992b4412af4826384537b43c
msgid ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path d=\"M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 "
"10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 "
"3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 "
"0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0"
" .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 "
"2.1v-5.85l-3.5 2.1Z\"></path></svg> Watch a demo"
msgstr ""

#: ../../modules/vector.md:28 dbbeffd151df46869357a1557da0a5da
msgid "\"With vectors, physics has found a magnificent language.\""
msgstr ""

#: ../../modules/vector.md:29 8e5ec48f2f9a4fbf86cbe42410e34d3e
msgid "Richard Feynman"
msgstr ""

#: ../../modules/vector.md:35 4c4665b3d1cc4d61a909efa183dfaec3
msgid "üîß Functions"
msgstr ""

#: ../../modules/vector.md:37 1ca20869bdf646d1997972c9f41e71c9
msgid "You can find below all functions available in this module."
msgstr ""

#: ../../modules/vector.md:41 20651cf7b80f4bba9f61150dc29d5b59
msgid "Absolute Max"
msgstr ""

#: ../../modules/vector.md:45 1fb15e7beee14bd3af0b115a0a87ece3
msgid "Get the number furthest to zero, regardless of sign."
msgstr ""

#: ../../modules/vector.md:47 ../../modules/vector.md:79
#: ../../modules/vector.md:111 ../../modules/vector.md:193
#: ../../modules/vector.md:240 ../../modules/vector.md:284
#: ../../modules/vector.md:332 ../../modules/vector.md:369
#: ../../modules/vector.md:411 ../../modules/vector.md:452
#: ../../modules/vector.md:494 1697b7eb1f294d38871138e9aac31b6a
#: 377ea7cda279488abff9a834a5b99d8d 3a11d6af232f4a3789c451d6d6daecdc
#: 71b39b26742f49719e733c3841c5f9e6 7e8faf6dc22542b88d767b76b668eb10
#: 92261b9a4698455bbfa74b8e4ead9f23 abedd5a7d2234c1ab4c587309459b127
#: ac8bd06e6ca84de69fd93d4ea843b55d bc53b761ba514bf4a6e68d63cb56ce33
#: c4d5086aa630417eaff38e15d706cc73 f7895879899944b098e705bb959092a8
msgid "Inputs"
msgstr ""

#: ../../modules/vector.md:48 7dc8a24e4f6d4d919d3c352c2eb4c469
msgid "**Scores `$vector.abs_max.[0,1,2] bs.in`**: Vector components."
msgstr ""

#: ../../modules/vector.md:50 ../../modules/vector.md:82
#: ../../modules/vector.md:122 ../../modules/vector.md:202
#: ../../modules/vector.md:251 ../../modules/vector.md:295
#: ../../modules/vector.md:335 ../../modules/vector.md:378
#: ../../modules/vector.md:420 ../../modules/vector.md:461
#: ../../modules/vector.md:503 002b87edb38548f5a26a2c286b3cf9a6
#: 0a95b61cab8f40fc932e136c7248a9b2 164ebdfbda1e448a9f3113a4060183dd
#: 16a10feaede54cffa1e8314a076e8b67 5b9be0b8e9f84895a373b29d839d2867
#: 6b0965a91dd44895940d7f611b75d327 757799a74036430ebcc6aa4bab24225a
#: 81888ee5f05d403394e99d7d8d875cb1 828c684beb494c52bea5e69b7e5d8ea9
#: a681330740e34157aac46a959b644f2a c8148fe1bab1413eb0d2fe9c1b1593a8
msgid "Outputs"
msgstr ""

#: ../../modules/vector.md:51 347f0989f5d14855ae8f19ee4735aec1
msgid ""
"**Return | Score `$vector.abs_max bs.out`**: Component with the value "
"furthest from 0."
msgstr ""

#: ../../modules/vector.md:54 1cd3009d3baf4c32aadda5c3d2b76360
msgid ""
"*Example: I want to get the max component of the vector (1000, 2000, "
"3000):*"
msgstr ""

#: ../../modules/vector.md:69 ../../modules/vector.md:183
#: ../../modules/vector.md:397 ../../modules/vector.md:484
#: 4f0deaf6891d49ab939396fffa290ce5 6b99033d4981429eb2e49322564c1f77
#: 908278d31c984fcd99866510e5f358b5 a70fb9f20d8647f5a9ba8e572b57fff8
msgid "**Credits**: Aksiome, Leirof"
msgstr ""

#: ../../modules/vector.md:73 1c10d0c81b4644318e1b5072b874c374
msgid "Absolute Min"
msgstr ""

#: ../../modules/vector.md:77 fc8d870db3184f588a0e24594e98ec8b
msgid "Get the number closest to zero, regardless of sign."
msgstr ""

#: ../../modules/vector.md:80 ce297ca3540f49c59a2260ff5ecaa4a1
msgid "**Scores `$vector.abs_min.[0,1,2] bs.in`**: Vector components."
msgstr ""

#: ../../modules/vector.md:83 8ca72370eff544b4a0042260df6472e4
msgid ""
"**Return | Score `$vector.abs_min bs.out`**: Component with the value "
"closest to 0."
msgstr ""

#: ../../modules/vector.md:86 50e07d4e74ab42db8e677576eab32cb5
msgid ""
"*Example: I want to get the min component of the vector (1000, 2000, "
"3000):*"
msgstr ""

#: ../../modules/vector.md:101 ../../modules/vector.md:230
#: ../../modules/vector.md:531 217753b48a11438e91506c2f4bae99af
#: 9833694eeb8843a6bf2ef0d443e8d185 b7b35943adb44fadae25e9b86739a234
msgid "**Credits**: Aksiome"
msgstr ""

#: ../../modules/vector.md:105 5e27639695094071a6206835e345d976
msgid "Basis Rotation 3D"
msgstr ""

#: ../../modules/vector.md:109 58f4474ecce34040b6a4f0d1b1ef06a8
msgid ""
"Get the equivalent of the vector passed in parameter in a base with a "
"different rotation. Useful to convert absolute/relative positions into "
"local positions."
msgstr ""

#: ../../modules/vector.md:112 75693e26bde64ca59c3c69fd7e46547a
msgid ""
"**Scores `$vector.basis_rot_3d.pos.[0,1,2] bs.in`**: Vector coordinates "
"$=(X,Y,Z)$ in the starting base."
msgstr ""

#: ../../modules/vector.md:114 1069b306dc2e4224a3f0a35636418e56
#, python-brace-format
msgid ""
"**Scores `$vector.basis_rot_3d.rot.[0,1] bs.in`**: Horizontal angle "
"$=\\phi$ (along $=\\hat{y}$) and vertical angle $=\\theta$ (along "
"$=\\hat{\\phi}$) rotation (in degree) from the starting base."
msgstr ""

#: ../../modules/vector.md:116 ../../modules/vector.md:196
#: ../../modules/vector.md:245 ../../modules/vector.md:289
#: ../../modules/vector.md:372 ../../modules/vector.md:414
#: ../../modules/vector.md:455 ../../modules/vector.md:497
#: 2e16265252224e23bf02b93c727c30c9 484a3e21fe2049b18ae36b8f391606d9
#: 68b66e15905a4629a5c442b5315b12e7 768ce77e71c547dabec2499f6f709c36
#: 76da104b9bf0426bad2cbf9fa7813631 94175f4e96284ba3a06ac2bf819926f8
#: d8f4e94d6dae42dd97ccd3ba17ec5240 fdda7560dce34070b799c1a54b7c542e
msgid "**Function macro**:"
msgstr ""

#: ../../modules/vector.md:123 8d1dec15aef04748ab3184752da315e4
msgid ""
"**Scores `$vector.basis_rot_3d.[0,1,2] bs.out`**: Vector coordinates "
"$=(X',Y',Z')$ in the target base."
msgstr ""

#: ../../modules/vector.md:126 03aaaffcdef9481aab55bafc369580d6
msgid "Basis System"
msgstr ""

#: ../../modules/vector.md:129 291aa74206a848f988b2f458a389f4e1
msgid "This system uses the Minecraft coordinate system. Thus:"
msgstr ""

#: ../../modules/vector.md:130 98c458f410b34983ba824a300bbda60f
#, python-brace-format
msgid "$\\hat{y}$ is the vertical axis."
msgstr ""

#: ../../modules/vector.md:131 d483e4f27fc04f7fbd351284888ffbdb
#, python-brace-format
msgid ""
"$\\phi=0$ (starting point of the horizontal angle) is along the "
"$\\hat{z}$ axis."
msgstr ""

#: ../../modules/vector.md:132 d39682ed302a4ef6901a3cf3fe073e9a
msgid ""
"$\\theta=0$ (starting point of the vertical angle) is on the horizontal "
"plane."
msgstr ""

#: ../../modules/vector.md:135 80c1945136c54c4e8639fd7631c2e203
msgid ""
"*Example: A block is located at ~2 ~5 ~10 relative to me, I want to have "
"this position in local coordinate (^? ^? ^?):*"
msgstr ""

#: ../../modules/vector.md:157 28ddef2f8483414ca7c4b83ff9c3deed
msgid ""
"*Example: I want to have a vector pointing to where I'm looking at, but "
"in relative coordinates ~X ~Y ~Z:*"
msgstr ""

#: ../../modules/vector.md:187 573e40050f644457952da12c352d9d7e
msgid "Cartesian to Spherical"
msgstr ""

#: ../../modules/vector.md:191 b7f03ea7db8349f0899bb1a30413668d
msgid "Convert cartesian coordinates to spherical coordinates."
msgstr ""

#: ../../modules/vector.md:194 c9a810ee1b0845469efc133851a3d8e3
msgid ""
"**Scores `$vector.cartesian_to_spherical.[0,1,2] bs.in`**: Vector "
"representing the cartesian coordinates $=(X,Y,Z)$."
msgstr ""

#: ../../modules/vector.md:203 c95b0f1cf1214864803be3881f9f123c
msgid ""
"**Scores `$vector.cartesian_to_spherical.[0,1,2] bs.out`**: Vector "
"representing the spherical coordinates $=(H,V,R)$."
msgstr ""

#: ../../modules/vector.md:206 ../../modules/vector.md:507
#: 491f7608404949d3b92d0cd9737d9c8a ffbdf29f63e442d7886e48f86eedbd0a
msgid "Spherical Coordinates"
msgstr ""

#: ../../modules/vector.md:209 6111d16a4ff44afea401fca132b8079f
msgid ""
"This system returns non conventional [spherical "
"coordinates](https://en.wikipedia.org/wiki/Spherical_coordinate_system)."
msgstr ""

#: ../../modules/vector.md:210 ../../modules/vector.md:511
#: b96340e591b9440090131b6a6db28fde eb34b164818f4230b54e1743ffd504f7
#, python-brace-format
msgid "$H$ (horizontal angle) is along the $\\hat{z}$ axis."
msgstr ""

#: ../../modules/vector.md:211 ../../modules/vector.md:512
#: 343a976bac084b43aa6293babae626d1 ab6a71fb5a3745f3be2d348bab1cc7cc
msgid "$V$ (vertical angle) is on the horizontal plane."
msgstr ""

#: ../../modules/vector.md:212 ../../modules/vector.md:513
#: 20da0998130e41c6bea39119c1289b3f d1d22ad08fd44d478423a9d65fb64428
msgid "$R$ is the radial distance."
msgstr ""

#: ../../modules/vector.md:215 96da42ac0c5847e3b83dd6e9538e7194
msgid ""
"*Example: I want to convert the vector (1000, 2000, 3000) to spherical "
"coordinates:*"
msgstr ""

#: ../../modules/vector.md:234 3560b102388e4601aba89da1d4b0b956
msgid "Cross Product"
msgstr ""

#: ../../modules/vector.md:238 6bcabeb2d68043e7bd581681f87803a5
msgid "Compute the vector product between $u$ and $v$."
msgstr ""

#: ../../modules/vector.md:241 1aa4d80746dd49d491be6d46f87f2d66
msgid ""
"**Scores `$vector.cross_product.u.[0,1,2] bs.in`**: First vector "
"components."
msgstr ""

#: ../../modules/vector.md:243 e4f3104d09d14485a22c57e3286bd05a
msgid ""
"**Scores `$vector.cross_product.v.[0,1,2] bs.in`**: Second vector "
"components."
msgstr ""

#: ../../modules/vector.md:252 25256a3dc76d42d38655eb03560e49e5
msgid ""
"**Scores `$vector.cross_product.[0,1,2] bs.out`**: Result of the "
"operation $=u \\times v$."
msgstr ""

#: ../../modules/vector.md:255 f52396c318f74e30bd2d9894e192ad21
msgid ""
"*Example: I want to perform $u \\times v$ with $u=(1,2,3)$ and "
"$v=(4,5,6):*"
msgstr ""

#: ../../modules/vector.md:274 ../../modules/vector.md:318
#: 540a6e5a795a49e6a8ece14c79415bd9 dee0807ae46f44e8b97e3f349bd3469d
msgid "**Credits**: Aksiome, Majoras16"
msgstr ""

#: ../../modules/vector.md:278 37ac0705639044b3be3c41ef831b02f6
msgid "Dot Product"
msgstr ""

#: ../../modules/vector.md:282 627af48f6ec34113a5d80d8a52928cf0
msgid "Compute the scalar product between $u$ and $v$."
msgstr ""

#: ../../modules/vector.md:285 c4e159cb21c14f08bd7ef187327967fb
msgid "**Scores `$vector.dot_product.u.[0,1,2] bs.in`**: First vector components."
msgstr ""

#: ../../modules/vector.md:287 426add1d2f8c47179ce10d2116b83575
msgid ""
"**Scores `$vector.dot_product.v.[0,1,2] bs.in`**: Second vector "
"components."
msgstr ""

#: ../../modules/vector.md:296 23b2db91f7954e15aeeaae704f0e3e49
msgid "**Scores `$vector.dot_product bs.out`**: Result of the operation $=u ¬∑ v$."
msgstr ""

#: ../../modules/vector.md:299 e7a7bed891314fc7b249902a894e86b6
msgid "*Example: I want to perform $u \\cdot v$ with $u=(1,2,3)$ and $v=(4,5,6):*"
msgstr ""

#: ../../modules/vector.md ../../modules/vector.md:322
#: 5dafb7819f894070b0fe38633c047967 9addb75b6fae45aa9ecf110a5729461c
msgid "Length"
msgstr ""

#: ../../modules/vector.md:330 aafd20ebd6994f13bbad80d0bc96dbea
msgid "Compute the norm of the vector."
msgstr ""

#: ../../modules/vector.md:333 eccef4477e4f4e18857cafe20a7906d2
msgid "**Scores `$vector.length.[0,1,2] bs.in`**: Vector components."
msgstr ""

#: ../../modules/vector.md:336 4386ae5f863140feb51b1de7d39e59cd
msgid "**Return | Score `$vector.length bs.out`**: Vector length."
msgstr ""

#: ../../modules/vector.md:339 18a511a224914665895a78ef0caf1231
msgid "*Example: Compute the length of a vector:*"
msgstr ""

#: ../../modules/vector.md:352 ../../modules/vector.md:424
#: 8a460d20f41f4a78a062d3389bb63711 d5d6e5d8dbed4c03be5d3a6d7916a3f5
msgid "Performance Tip"
msgstr ""

#: ../../modules/vector.md:355 b1b835572051483480a33bcea914907c
msgid ""
"To minimize performance impact, we recommend using the `length_squared` "
"function instead of this one when possible. Computing the length of a "
"vector requires a square root operation, which is computationally "
"intensive, especially in Minecraft."
msgstr ""

#: ../../modules/vector.md:357 0046b2c541ad4f0cb6e626e95f42d75e
msgid "`length_squared` can be used effectively in these cases:"
msgstr ""

#: ../../modules/vector.md:358 fb266adef318423392e3bb70a7cc29ff
msgid ""
"When comparing a vector's length with a given value, compute the square "
"of the given value manually and compare it with the result of "
"`length_squared`."
msgstr ""

#: ../../modules/vector.md:359 f25e526ade3b49b78e201b53426f7170
msgid ""
"When comparing the lengths of two vectors, compare their `length_squared`"
" results instead of computing their actual lengths."
msgstr ""

#: ../../modules/vector.md b66d43e95e0845a093f3f2ab3051ba59
msgid "Length Squared"
msgstr ""

#: ../../modules/vector.md:367 3b6f24df443b4cd68a2d3774a9f398c4
msgid "Compute the squared norm of the vector."
msgstr ""

#: ../../modules/vector.md:370 4cb8d6d3323e42c094468b8a859acb10
msgid "**Scores `$vector.length_squared.[0,1,2] bs.in`**: Vector components."
msgstr ""

#: ../../modules/vector.md:379 8b2bcc34356f422ebfa0570aee523bd4
msgid "**Return | Score `$vector.length_squared bs.out`**: Vector length squared."
msgstr ""

#: ../../modules/vector.md:382 ff0d36f9b5fe432a99a881307aa94362
msgid "*Example: Compute the squared length of a vector:*"
msgstr ""

#: ../../modules/vector.md:401 c5fb9a7abe744bb68a0515566098641e
msgid "Normalize"
msgstr ""

#: ../../modules/vector.md 72866ed4ce17418daefcc0f3f65e071a
msgid "Norm"
msgstr ""

#: ../../modules/vector.md:409 354c3645c83f41248ee387651f905442
msgid ""
"Normalize the vector by putting the length at the given scale while "
"keeping proportions."
msgstr ""

#: ../../modules/vector.md:412 d1964249f2f44087990181b5aeae6071
msgid "**Scores `$vector.normalize.[0,1,2] bs.in`**: Vector components."
msgstr ""

#: ../../modules/vector.md:421 e0b2249361b34ef4a03f2bb1a8a4275a
msgid ""
"**Scores `$vector.normalize.[0,1,2] bs.out`**: Normalized vector "
"components."
msgstr ""

#: ../../modules/vector.md:427 05788a5aaefa4a8db5588c9ecd851dbc
msgid ""
"Vector normalization doesn't always require using the length. Often, the "
"`normalize_max_component` function can be used instead. While this method"
" doesn't normalize the length, it simplifies operations and improves "
"performance."
msgstr ""

#: ../../modules/vector.md:430 786e9278bb4047bcac7ac0b3069633d3
msgid "*Example: Normalize the vector (1000, 2000, 3000) with a scale of 1000:*"
msgstr ""

#: ../../modules/vector.md a7ed50dc53c949cfa0af580463317630
msgid "Max Component"
msgstr ""

#: ../../modules/vector.md:450 60b1f097399e4ae7847d56204f9cab0e
msgid ""
"Normalize the vector by placing the largest component at the given scale "
"while keeping proportions."
msgstr ""

#: ../../modules/vector.md:453 3724bd487a07475d9f44ef7106640aa4
msgid ""
"**Scores `$vector.normalize_max_component.[0,1,2] bs.in`**: Vector "
"components."
msgstr ""

#: ../../modules/vector.md:462 da9aeb976dba4eb9b63b946af1e1071b
msgid ""
"**Scores `$vector.normalize_max_component.[0,1,2] bs.out`**: Normalized "
"vector components."
msgstr ""

#: ../../modules/vector.md:464 507cc454af97417890beafd2e97eb581
msgid ""
"**Score `$vector.normalize_max_component.factor bs.out`**: Normalization "
"factor."
msgstr ""

#: ../../modules/vector.md:467 9b390392f0cb4c9dbc61ae3cf063994d
msgid ""
"*Example: Fast normalize the vector (1000, 2000, 3000) with a scale of "
"1000:*"
msgstr ""

#: ../../modules/vector.md:488 7dcbae2c940e4d228c6dd38665e5717e
msgid "Spherical to Cartesian"
msgstr ""

#: ../../modules/vector.md:492 ced4556eb2c44296b91bee6b59e4b66c
msgid "Convert spherical coordinates to cartesian coordinates."
msgstr ""

#: ../../modules/vector.md:495 f8774ca9abf140a5881efbd2cc380b51
msgid ""
"**Scores `$vector.spherical_to_cartesian.[0,1,2] bs.in`**: Vector "
"representing the spherical coordinates $=(H,V,R)$."
msgstr ""

#: ../../modules/vector.md:504 2057dfbcfa7b422eb04c7d533c3eea3c
msgid ""
"**Scores `$vector.spherical_to_cartesian.[0,1,2] bs.out`**: Vector "
"representing the cartesian coordinates $=(X,Y,Z)$."
msgstr ""

#: ../../modules/vector.md:510 d377cfd207964eba9b9b4969a1bf7e38
msgid ""
"This system uses non conventional [spherical "
"coordinates](https://en.wikipedia.org/wiki/Spherical_coordinate_system)."
msgstr ""

#: ../../modules/vector.md:516 e2eba6eb352f49429877f421c96a66e1
msgid ""
"*Example: I want to convert the spherical coordinates $(45¬∞, 30¬∞, 1)$ to "
"cartesian coordinates:*"
msgstr ""

#: ../../_templates/comments.md:4 a22be169a9024e11b6ddaadd71ddb80c
msgid "**üí¨ Did it help you?**"
msgstr ""

#: ../../_templates/comments.md:6 106d8906efb24e109522fe5d965a85bf
msgid "Feel free to leave your questions and feedback below!"
msgstr ""

