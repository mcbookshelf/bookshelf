# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Gunivers
# This file is distributed under the same license as the Bookshelf package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bookshelf \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-18 22:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../../modules/vector.md:1 63b1c620cb6347a7b728058faf064eda
msgid "➡️ Vector"
msgstr "➡️ 向量（Vector）"

#: ../../../modules/vector.md:3 d58fbade3e284567bc36d83eb36960e3
msgid "**`#bs.vector:help`**"
msgstr "**`#bs.vector:help`**"

#: ../../../modules/vector.md:5 4788d85682b54130be6d01ab0e25c66b
msgid ""
"Vectors are fundamental and incredibly powerful tools to manage motions, "
"forces and... well... do physics!"
msgstr "向量是管理运动、力和……嗯……做物理的基础且强大的工具！"

#: ../../../modules/vector.md:18 61e193d99da0410f98c23467c9c2ae20
msgid ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path d=\"M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 "
"10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 "
"3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 "
"0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0"
" .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 "
"2.1v-5.85l-3.5 2.1Z\"></path></svg> Watch a demo"
msgstr "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path d=\"M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 "
"10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 "
"3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 "
"0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0"
" .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 "
"2.1v-5.85l-3.5 2.1Z\"></path></svg> 观看演示"

#: ../../../modules/vector.md:28 52802df677fa46d5bd2e5675babdf415
msgid "\"With vectors, physics has found a magnificent language.\""
msgstr "“有了向量，物理学找到了一种优美的语言。”"

#: ../../../modules/vector.md:29 c2aab7bf6ac44366bd7786c597a1edbf
msgid "Richard Feynman"
msgstr "理查德·费曼（Richard Feynman）"

#: ../../../modules/vector.md:35 ac0dde7740954bff915d4c4d2d8f8780
msgid "🔧 Functions"
msgstr "🔧 函数"

#: ../../../modules/vector.md:37 d72551aa14b14d81bdd9711fd22c3c47
msgid "You can find below all functions available in this module."
msgstr "您可以在下方找到此模块中的所有可用函数。"

#: ../../../modules/vector.md:41 7a2e7d716e1149d0a40450c7c1e3f672
msgid "Absolute Max"
msgstr "绝对值最大"

#: ../../../modules/vector.md:45 f5577d5e723844239d9ca9e4dd17c70b
msgid "Get the number furthest to zero, regardless of sign."
msgstr "获取距离零最远的数，不考虑符号。"

#: ../../../modules/vector.md:47 ../../../modules/vector.md:79
#: ../../../modules/vector.md:111 ../../../modules/vector.md:193
#: ../../../modules/vector.md:240 ../../../modules/vector.md:284
#: ../../../modules/vector.md:332 ../../../modules/vector.md:369
#: ../../../modules/vector.md:411 ../../../modules/vector.md:452
#: ../../../modules/vector.md:494 0eb9421973634c5aba6d9debf2ecf109
#: 1047082a86864268be7c395e1afa3868 4aab0b3081074e34b53603e47916ed2f
#: 4c1a75dec6644fceb0a7bf163d1daccc 8fcdd9db9e3d4f42810e02fda4b7d9f7
#: 9db02ef4b2ff432ba8c0641b995f8f65 b0339b1c2f5d4867be77b937ae50f218
#: da31c1a86eac4efa8ece65f7bb0f1136 e427d5473bbb4b75ab5bbd15c29c4e68
#: f15d8c7ac8f2488db7abf420b83b5c46 f170beb376fc428bab33e1a145a270bc
msgid "Inputs"
msgstr "输入"

#: ../../../modules/vector.md:48 c661495acd0041f69f9a48dd3c27b0f0
msgid "**Scores `$vector.abs_max.[0,1,2] bs.in`**: Vector components."
msgstr "**分数 `$vector.abs_max.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:50 ../../../modules/vector.md:82
#: ../../../modules/vector.md:122 ../../../modules/vector.md:202
#: ../../../modules/vector.md:251 ../../../modules/vector.md:295
#: ../../../modules/vector.md:335 ../../../modules/vector.md:378
#: ../../../modules/vector.md:420 ../../../modules/vector.md:461
#: ../../../modules/vector.md:503 10a2022678ae4cf3b88452a1ea65640f
#: 1edac361c1024c4b8b6cad06ecf8fe5a 6865e60f8b384586b78fd15b11de01cb
#: 77e803364c58402e9da18fba77857570 9acab57c12f241329495c2e8e2b52ab0
#: 9e2d32c7112b4626b2d3beacb5ec5f66 c97f4c42dc2c4602b44bd26d7d449c91
#: d5f17998f1fd4c17884823ea72a58dc0 e3bc253f35a34a1c985cd73a422b3e13
#: f0bf3eb17e134cff842a8d7dbe171bea facb3b4b08b44aefa702b080442b685c
msgid "Outputs"
msgstr "输出"

#: ../../../modules/vector.md:51 4cedac84d9e349ef897d97a1135905cf
msgid ""
"**Return | Score `$vector.abs_max bs.out`**: Component with the value "
"furthest from 0."
msgstr "**返回值 | 分数 `$vector.abs_max bs.out`**：离0最远的分量值。"

#: ../../../modules/vector.md:54 c69eb47c27de4a95bdf27bb31bb3af2e
msgid ""
"*Example: I want to get the max component of the vector (1000, 2000, "
"3000):*"
msgstr "*示例：我想获取向量(1000, 2000, 3000)的最大分量：*"

#: ../../../modules/vector.md:69 ../../../modules/vector.md:183
#: ../../../modules/vector.md:397 ../../../modules/vector.md:484
#: 1639e89723684d88ae442fa50c475330 6070d236342c42699253e62a9941cafc
#: 806ecab839d64bc393f09dfe0f29aaf3 d034f50739b4478588cc04fbdea11098
msgid "**Credits**: Aksiome, Leirof"
msgstr "**制作人员**：Aksiome、Leirof"

#: ../../../modules/vector.md:73 5eb5390510a64dafb2feb908fffbe63c
msgid "Absolute Min"
msgstr "绝对值最小"

#: ../../../modules/vector.md:77 a34aa732bbaa49afa5f37ef4a8b5e52b
msgid "Get the number closest to zero, regardless of sign."
msgstr "获取离零最近的数，不考虑符号。"

#: ../../../modules/vector.md:80 eb76283260d24ff7923d8e6206c3f1cd
msgid "**Scores `$vector.abs_min.[0,1,2] bs.in`**: Vector components."
msgstr "**分数 `$vector.abs_min.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:83 bb66ddc7b10d48e5b801abb5b6a5dd94
msgid ""
"**Return | Score `$vector.abs_min bs.out`**: Component with the value "
"closest to 0."
msgstr "**返回值 | 分数 `$vector.abs_min bs.out`**：离0最近的分量值。"

#: ../../../modules/vector.md:86 55a5b444d84c439d8a3e91a54e6e9206
msgid ""
"*Example: I want to get the min component of the vector (1000, 2000, "
"3000):*"
msgstr "*示例：我想获取向量(1000, 2000, 3000)的最小分量：*"

#: ../../../modules/vector.md:101 ../../../modules/vector.md:230
#: ../../../modules/vector.md:531 6148dba694054ddba355b7c1c3f528eb
#: f4bb425a85d141b3b5eab267ca04290a f818954aa4384500971cc67e4c41cc81
msgid "**Credits**: Aksiome"
msgstr "**制作人员**：Aksiome"

#: ../../../modules/vector.md:105 68313274be5f4527a4fc64276f387375
msgid "Basis Rotation 3D"
msgstr "3D基底旋转"

#: ../../../modules/vector.md:109 9eb7b768207741d48e1df7135611f4cd
msgid ""
"Get the equivalent of the vector passed in parameter in a base with a "
"different rotation. Useful to convert absolute/relative positions into "
"local positions."
msgstr "获取传入参数向量在另一旋转基下的等效向量，可用于将绝对/相对坐标转换为局部坐标系中的位置。"

#: ../../../modules/vector.md:112 f529aa605d074f248e4b3048902c8df5
msgid ""
"**Scores `$vector.basis_rot_3d.pos.[0,1,2] bs.in`**: Vector coordinates "
"$=(X,Y,Z)$ in the starting base."
msgstr "**分数 `$vector.basis_rot_3d.pos.[0,1,2] bs.in`**：在起始基底中的向量坐标 $=(X,Y,Z)$。"

#: ../../../modules/vector.md:114 09008fcd2c224cdbb5d39658203834a7
#, python-brace-format
msgid ""
"**Scores `$vector.basis_rot_3d.rot.[0,1] bs.in`**: Horizontal angle "
"$=\\phi$ (along $=\\hat{y}$) and vertical angle $=\\theta$ (along "
"$=\\hat{\\phi}$) rotation (in degree) from the starting base."
msgstr "**分数 `$vector.basis_rot_3d.rot.[0,1] bs.in`**：相对于起始基底的水平角 $=\\phi$（沿 $=\\hat{y}$ 轴）和垂直角 $=\\theta$（沿 $=\\hat{\\phi}$ 轴）旋转（以度为单位）。"

#: ../../../modules/vector.md:116 ../../../modules/vector.md:196
#: ../../../modules/vector.md:245 ../../../modules/vector.md:289
#: ../../../modules/vector.md:372 ../../../modules/vector.md:414
#: ../../../modules/vector.md:455 ../../../modules/vector.md:497
#: 5e0f0b05f84642b3b59d16082d58124a 6c2df052aa0b406d869211f09062f749
#: 83484a777b464c5e9548b20bbbe7c359 a0d4eaf09aad42f79fac983db737440d
#: a61f4868c0f843e38c694dc96a38812c c583d5552109446a8294516ce9d070b0
#: f25d2cfe080a43ea803c1ea44eb67a18 f79c3036cf4b4ac78c300be579dcd2c1
msgid "**Function macro**:"
msgstr "**函数宏**："

#: ../../../modules/vector.md:123 cb99a1443c984cceb640a0f0426ab541
msgid ""
"**Scores `$vector.basis_rot_3d.[0,1,2] bs.out`**: Vector coordinates "
"$=(X',Y',Z')$ in the target base."
msgstr "**分数 `$vector.basis_rot_3d.[0,1,2] bs.out`**：在目标基底中的向量坐标 $=(X',Y',Z')$。"

#: ../../../modules/vector.md:126 1eb914275b454bfe93f998e396bc7268
msgid "Basis System"
msgstr "基底系统"

#: ../../../modules/vector.md:129 50bbc6e60f1e440abbe8ae8ffa910abe
msgid "This system uses the Minecraft coordinate system. Thus:"
msgstr "此系统使用Minecraft坐标系。因此："

#: ../../../modules/vector.md:130 72ec5ad19a8248e2a7a3866172a09e88
#, python-brace-format
msgid "$\\hat{y}$ is the vertical axis."
msgstr "$\\hat{y}$ 是垂直轴。"

#: ../../../modules/vector.md:131 2ac8f62c8b694f669ecc908bc365bee2
#, python-brace-format
msgid ""
"$\\phi=0$ (starting point of the horizontal angle) is along the "
"$\\hat{z}$ axis."
msgstr "$\\phi=0$（水平角的起点）是沿着 $\\hat{z}$ 轴的。"

#: ../../../modules/vector.md:132 3d7638c4d6b741b995f4dc0984a69766
msgid ""
"$\\theta=0$ (starting point of the vertical angle) is on the horizontal "
"plane."
msgstr "$\\theta=0$（垂直角的起点）在水平平面上。"

#: ../../../modules/vector.md:135 c5c94a08b3b44d9dbb1c78adaabc4336
msgid ""
"*Example: A block is located at ~2 ~5 ~10 relative to me, I want to have "
"this position in local coordinate (^? ^? ^?):*"
msgstr "*示例：一个方块相对于我的位置在~2 ~5 ~10，我想获取这个位置的局部坐标（^? ^? ^?）：*"

#: ../../../modules/vector.md:157 1f75416f2d574f27bff2ea74e725c691
msgid ""
"*Example: I want to have a vector pointing to where I'm looking at, but "
"in relative coordinates ~X ~Y ~Z:*"
msgstr "*示例：我想要一个指向我正在看的方向的向量，但用相对坐标~X ~Y ~Z表示：*"

#: ../../../modules/vector.md:187 2826c1fb86424b84aef233ea5c2347c1
msgid "Cartesian to Spherical"
msgstr "笛卡尔坐标转球坐标"

#: ../../../modules/vector.md:191 9acb0b9204da448b8f3949573f42b053
msgid "Convert cartesian coordinates to spherical coordinates."
msgstr "将笛卡尔坐标转换为球坐标。"

#: ../../../modules/vector.md:194 d7c8aaf20bea4516a74c58ce87e71ac0
msgid ""
"**Scores `$vector.cartesian_to_spherical.[0,1,2] bs.in`**: Vector "
"representing the cartesian coordinates $=(X,Y,Z)$."
msgstr "**分数 `$vector.cartesian_to_spherical.[0,1,2] bs.in`**：表示笛卡尔坐标 $=(X,Y,Z)$ 的向量。"

#: ../../../modules/vector.md:203 b305b61348274253a5dd61ab61aaefe5
msgid ""
"**Scores `$vector.cartesian_to_spherical.[0,1,2] bs.out`**: Vector "
"representing the spherical coordinates $=(H,V,R)$."
msgstr "**分数 `$vector.cartesian_to_spherical.[0,1,2] bs.out`**：表示球坐标 $=(H,V,R)$ 的向量。"

#: ../../../modules/vector.md:206 ../../../modules/vector.md:507
#: 08e366e81f7748da9461e440334794c5 b6606fd263084264a88603b03647ff15
msgid "Spherical Coordinates"
msgstr "球坐标"

#: ../../../modules/vector.md:209 7024051cb0394cb0972a7470f61ae398
msgid ""
"This system returns non conventional [spherical "
"coordinates](https://en.wikipedia.org/wiki/Spherical_coordinate_system)."
msgstr "此系统返回的是非常规的[球坐标](https://en.wikipedia.org/wiki/Spherical_coordinate_system)。"

#: ../../../modules/vector.md:210 ../../../modules/vector.md:511
#: 899f58b0f8e34bf2a403b016d94bb11b eb66c8b831844847acf2dc2b4b654287
#, python-brace-format
msgid "$H$ (horizontal angle) is along the $\\hat{z}$ axis."
msgstr "$H$（水平角）是沿着 $\\hat{z}$ 轴的。"

#: ../../../modules/vector.md:211 ../../../modules/vector.md:512
#: 622b810da0bb4138ba4ec3050ec8987e 81958306f98f4222a227bd10913679f8
msgid "$V$ (vertical angle) is on the horizontal plane."
msgstr "$V$（垂直角）在水平平面上。"

#: ../../../modules/vector.md:212 ../../../modules/vector.md:513
#: 1445b435c9ef499cb4bec070d5dad38c 5913ccc81fa14f0f9d7f6ac897dcd70b
msgid "$R$ is the radial distance."
msgstr "$R$ 是径向距离。"

#: ../../../modules/vector.md:215 42a8b8449a474efc973e73de8d0bb7dd
msgid ""
"*Example: I want to convert the vector (1000, 2000, 3000) to spherical "
"coordinates:*"
msgstr "*示例：我想将向量(1000, 2000, 3000)转换为球坐标：*"

#: ../../../modules/vector.md:234 ccd288ebb97e4556a00a3215cb0c0788
msgid "Cross Product"
msgstr "叉乘"

#: ../../../modules/vector.md:238 f19230a03d4146a188c3d8bf8baa81bd
msgid "Compute the vector product between $u$ and $v$."
msgstr "计算 $u$ 和 $v$ 的叉乘。"

#: ../../../modules/vector.md:240 bf0fa73e428046dc96e8bf742e6e3d45
msgid ""
"**Scores `$vector.cross_product.u.[0,1,2] bs.in`**: First vector "
"components."
msgstr "**分数 `$vector.cross_product.u.[0,1,2] bs.in`**：第一个向量分量。"

#: ../../../modules/vector.md:243 d2b130e7da6d4a45b3d4ea3b2c27f426
msgid ""
"**Scores `$vector.cross_product.v.[0,1,2] bs.in`**: Second vector "
"components."
msgstr "**分数 `$vector.cross_product.v.[0,1,2] bs.in`**：第二个向量分量。"

#: ../../../modules/vector.md:252 13bacafd963c4261b303b8b50a609727
msgid ""
"**Scores `$vector.cross_product.[0,1,2] bs.out`**: Result of the "
"operation $=u \\times v$."
msgstr "**分数 `$vector.cross_product.[0,1,2] bs.out`**：操作结果 $=u \\times v$。"

#: ../../../modules/vector.md:255 35bdc83a3061415ea281f35cb37ec084
msgid ""
"*Example: I want to perform $u \\times v$ with $u=(1,2,3)$ and "
"$v=(4,5,6):*"
msgstr "*示例：我想对 $u=(1,2,3)$ 和 $v=(4,5,6)$ 计算 $u \\times v$：*"

#: ../../../modules/vector.md:274 ../../../modules/vector.md:318
#: 701b6dc330f54aaa9b78194ee03e3cba 7565981d529144a9babd6a42d66c7de8
msgid "**Credits**: Aksiome, Majoras16"
msgstr "**制作人员**：Aksiome、Majoras16"

#: ../../../modules/vector.md:278 7a4cfe936d1a424cb608d96043012b97
msgid "Dot Product"
msgstr "点乘"

#: ../../../modules/vector.md:282 028e72befc9b486b92aabf2e6b1beb08
msgid "Compute the scalar product between $u$ and $v$."
msgstr "计算 $u$ 和 $v$ 的点乘。"

#: ../../../modules/vector.md:285 23970b24a12d4ef4ac43de1bb8a98183
msgid "**Scores `$vector.dot_product.u.[0,1,2] bs.in`**: First vector components."
msgstr "**分数 `$vector.dot_product.u.[0,1,2] bs.in`**：第一个向量分量。"

#: ../../../modules/vector.md:287 fd57a66a77074d88a6ff2500cbff04e7
msgid ""
"**Scores `$vector.dot_product.v.[0,1,2] bs.in`**: Second vector "
"components."
msgstr "**分数 `$vector.dot_product.v.[0,1,2] bs.in`**：第二个向量分量。"

#: ../../../modules/vector.md:296 6ec0620974f54d3d8da5912724e8a9ba
msgid "**Scores `$vector.dot_product bs.out`**: Result of the operation $=u · v$."
msgstr "**分数 `$vector.dot_product bs.out`**：运算结果 $=u · v$。"

#: ../../../modules/vector.md:299 e4f8145d81164055acf1d8df4c7fd818
msgid "*Example: I want to perform $u \\cdot v$ with $u=(1,2,3)$ and $v=(4,5,6):*"
msgstr "*示例：我想对 $u=(1,2,3)$ 和 $v=(4,5,6)$ 计算 $u \\cdot v$：*"

#: ../../../modules/vector.md ../../../modules/vector.md:322
#: 8f51b669f0d34be39802814d5dd4e107 bade209ba9e14656a0306a1edfb70a82
msgid "Length"
msgstr "长度"

#: ../../../modules/vector.md:330 de88713e76694bbe8995b64a54d1f1e8
msgid "Compute the norm of the vector."
msgstr "计算向量的范数。"

#: ../../../modules/vector.md:333 d87b4f45936d405f9da9ad9548cb7946
msgid "**Scores `$vector.length.[0,1,2] bs.in`**: Vector components."
msgstr "**分数 `$vector.length.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:336 a4437a1497e84a3db266d98fb3a41640
msgid "**Return | Score `$vector.length bs.out`**: Vector length."
msgstr "**返回值 | 分数 `$vector.length bs.out`**：向量长度。"

#: ../../../modules/vector.md:339 5e316543a4e6498cb6d30c6537882e43
msgid "*Example: Compute the length of a vector:*"
msgstr "*示例：计算向量的长度：*"

#: ../../../modules/vector.md:352 ../../../modules/vector.md:424
#: 3c4c4fe41447465a8a8187e5dcc12535 5a636e241e6b4058a9e35a6aa94cb529
msgid "Performance Tip"
msgstr "性能提示"

#: ../../../modules/vector.md:355 784d999691d744389881cf2db85599aa
msgid ""
"To minimize performance impact, we recommend using the `length_squared` "
"function instead of this one when possible. Computing the length of a "
"vector requires a square root operation, which is computationally "
"intensive, especially in Minecraft."
msgstr "为了最小化性能影响，我们建议尽可能使用 `length_squared` 函数代替此函数。计算向量的长度需要进行平方根运算，这在计算上很耗费资源，特别是在 Minecraft 中。"

#: ../../../modules/vector.md:357 7c73b00165a3427a80179403a2c1be3d
msgid "`length_squared` can be used effectively in these cases:"
msgstr "`length_squared` 在以下情况下可以有效使用："

#: ../../../modules/vector.md:358 dc0b4e759fdc4adebc3ea3dc256b593a
msgid ""
"When comparing a vector's length with a given value, compute the square "
"of the given value manually and compare it with the result of "
"`length_squared`."
msgstr "当比较向量长度与给定值时，手动计算给定值的平方并与 `length_squared` 的结果进行比较。"

#: ../../../modules/vector.md:359 2e5ee638fafa477da2b69f7154276c5c
msgid ""
"When comparing the lengths of two vectors, compare their `length_squared`"
" results instead of computing their actual lengths."
msgstr "当比较两个向量的长度时，比较它们的 `length_squared` 结果而不是计算它们的实际长度。"

#: ../../../modules/vector.md cbc82fcea91d4d289decd950a580b4ed
msgid "Length Squared"
msgstr "平方长度"

#: ../../../modules/vector.md:367 29b5d5731a584a1399a9dc514b5ee9ce
msgid "Compute the squared norm of the vector."
msgstr "计算向量的范数的平方。"

#: ../../../modules/vector.md:370 2fd4aef1fb13444abb4abf2ff7062eea
msgid "**Scores `$vector.length_squared.[0,1,2] bs.in`**: Vector components."
msgstr "**分数 `$vector.length_squared.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:379 6648544d4cac44cca7f10bb3b2d57898
msgid "**Return | Score `$vector.length_squared bs.out`**: Vector length squared."
msgstr "**返回值 | 分数 `$vector.length_squared bs.out`**：向量的长度的平方。"

#: ../../../modules/vector.md:382 98fb84d20ab14582899253f5af412904
msgid "*Example: Compute the squared length of a vector:*"
msgstr "*示例：计算向量的长度的平方：*"

#: ../../../modules/vector.md:401 61a3e5e03f7944dc8a3e520de4bb3a08
msgid "Normalize"
msgstr "归一化"

#: ../../../modules/vector.md 048f0f05faeb49ebbfdb30bf25a7291c
msgid "Norm"
msgstr "范数"

#: ../../../modules/vector.md:409 3b5b5015bd0a43bc86974e131b380973
msgid ""
"Normalize the vector by putting the length at the given scale while "
"keeping proportions."
msgstr "将向量的长度缩放到指定值，并保持其方向不变。"

#: ../../../modules/vector.md:412 55f649d8725e4fd6b3b1caef3b0d5f8a
msgid "**Scores `$vector.normalize.[0,1,2] bs.in`**: Vector components."
msgstr "**分数 `$vector.normalize.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:421 fd13e491609f4cb6905fd8c15f3eaf56
msgid "**Scores `$vector.normalize.[0,1,2] bs.out`**: Normalized vector components."
msgstr "**分数 `$vector.normalize.[0,1,2] bs.out`**：归一化后的向量分量。"

#: ../../../modules/vector.md:427 babeeb4229aa46ea9f0a3637a93a320b
msgid ""
"Vector normalization doesn't always require using the length. Often, the "
"`normalize_max_component` function can be used instead. While this method"
" doesn't normalize the length, it simplifies operations and improves "
"performance."
msgstr "向量归一化并不总是需要使用长度。通常可以使用 `normalize_max_component` 函数代替。虽然这种方法不会归一化长度，但它简化了操作并提高了性能。"

#: ../../../modules/vector.md:430 dfc2a716caad46988562d1848be3f506
msgid "*Example: Normalize the vector (1000, 2000, 3000) with a scale of 1000:*"
msgstr "*示例：将向量(1000, 2000, 3000)按比例1000归一化：*"

#: ../../../modules/vector.md c657ea0dc1b141558fb80731932f3dbf
msgid "Max Component"
msgstr "最大分量"

#: ../../../modules/vector.md:450 c108c739fb5b4c44a1427c7e718a8650
msgid ""
"Normalize the vector by placing the largest component at the given scale "
"while keeping proportions."
msgstr "将向量的所有分量除以最大分量值，并保持其方向不变。"

#: ../../../modules/vector.md:453 394772f7373b41e99489a7eaf19cc696
msgid ""
"**Scores `$vector.normalize_max_component.[0,1,2] bs.in`**: Vector "
"components."
msgstr "**分数 `$vector.normalize_max_component.[0,1,2] bs.in`**：向量分量。"

#: ../../../modules/vector.md:462 40112f8eb83945579a02a2b1fb4f4abc
msgid ""
"**Scores `$vector.normalize_max_component.[0,1,2] bs.out`**: Normalized "
"vector components."
msgstr "**分数 `$vector.normalize_max_component.[0,1,2] bs.out`**：归一化后的向量分量。"

#: ../../../modules/vector.md:464 b7d075bc229044019ba5d34088447469
msgid ""
"**Score `$vector.normalize_max_component.factor bs.out`**: Normalization "
"factor."
msgstr "**分数 `$vector.normalize_max_component.factor bs.out`**：归一化因子。"

#: ../../../modules/vector.md:467 5e222bb1132640a5adcccec283777181
msgid ""
"*Example: Fast normalize the vector (1000, 2000, 3000) with a scale of "
"1000:*"
msgstr "*示例：快速将向量(1000, 2000, 3000)按比例1000归一化：*"

#: ../../../modules/vector.md:488 97b265ee30ff4401b7231596e63a0e61
msgid "Spherical to Cartesian"
msgstr "球坐标转笛卡尔坐标"

#: ../../../modules/vector.md:492 b62bb89a38d84766827d8fe9907cb3dd
msgid "Convert spherical coordinates to cartesian coordinates."
msgstr "将球坐标转换为笛卡尔坐标。"

#: ../../../modules/vector.md:495 9240d0decae3491282697de551d74619
msgid ""
"**Scores `$vector.spherical_to_cartesian.[0,1,2] bs.in`**: Vector "
"representing the spherical coordinates $=(H,V,R)$."
msgstr "**分数 `$vector.spherical_to_cartesian.[0,1,2] bs.in`**：表示球坐标 $=(H,V,R)$ 的向量。"

#: ../../../modules/vector.md:504 983b92dc78f04c0da0d305b28b7c2636
msgid ""
"**Scores `$vector.spherical_to_cartesian.[0,1,2] bs.out`**: Vector "
"representing the cartesian coordinates $=(X,Y,Z)$."
msgstr "**分数 `$vector.spherical_to_cartesian.[0,1,2] bs.out`**：表示笛卡尔坐标 $=(X,Y,Z)$ 的向量。"

#: ../../../modules/vector.md:510 7c7a3abb6bf9494e87cc0de90daf140e
msgid ""
"This system uses non conventional [spherical "
"coordinates](https://en.wikipedia.org/wiki/Spherical_coordinate_system)."
msgstr "此系统使用非常规的[球坐标](https://en.wikipedia.org/wiki/Spherical_coordinate_system)。"

#: ../../../modules/vector.md:516 f0b7b70e166f46359e0cb33b5f039f2a
msgid ""
"*Example: I want to convert the spherical coordinates $(45°, 30°, 1)$ to "
"cartesian coordinates:*"
msgstr "*示例：我想将球坐标 $(45°, 30°, 1)$ 转换为笛卡尔坐标：*"

#: ../../../_templates/comments.md:4 983522de91d24e4d9cd712f0474bc009
msgid "**💬 Did it help you?**"
msgstr "**💬 这对您有帮助吗？**"

#: ../../../_templates/comments.md:6 29c353ae59d243a3a115928c2c048c68
msgid "Feel free to leave your questions and feedback below!"
msgstr "欢迎在下方留下您的问题和反馈！"
