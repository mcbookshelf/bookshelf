# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Gunivers
# This file is distributed under the same license as the Bookshelf package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bookshelf \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 01:06+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../modules/generation.md:1 e54eb79d7e4a40e9bc39046e11a3e3bb
msgid "🏗️ Generation"
msgstr "🏗️ 生成（Generation）"

#: ../../modules/generation.md:3 9a1f7c8809ea4a8ea6afda5b552e538a
msgid "**`#bs.generation:help`**"
msgstr "**`#bs.generation:help`**"

#: ../../modules/generation.md:5 4f6bf2283b594850b7bc43cd2d8563e9
msgid "Generate diverse terrains and landscapes, incorporating natural features."
msgstr "生成包含自然地貌的多样化地形和景观。"

#: ../../modules/generation.md:18 7326fa37d1304989a7fd427de8736380
msgid ""
"\"Nature's beauty is a reflection of the harmony of numbers and "
"patterns.\""
msgstr "“美是数的和谐。”"

#: ../../modules/generation.md:19 5520fff829984040981d462d48b15eef
msgid "Anonymous"
msgstr "佚名"

#: ../../modules/generation.md:23 6f2aecac510a4626a969a0934d8aaf9c
msgid ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path d=\"M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 "
"10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 "
"3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 "
"0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0"
" .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 "
"2.1v-5.85l-3.5 2.1Z\"></path></svg> Watch a demo"
msgstr ""
"<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon "
"sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-"
"hidden=\"true\"><path d=\"M16 3.75v8.5a.75.75 0 0 1-1.136.643L11 "
"10.575v.675A1.75 1.75 0 0 1 9.25 13h-7.5A1.75 1.75 0 0 1 0 11.25v-6.5C0 "
"3.784.784 3 1.75 3h7.5c.966 0 1.75.784 1.75 1.75v.675l3.864-2.318A.75.75 "
"0 0 1 16 3.75Zm-6.5 1a.25.25 0 0 0-.25-.25h-7.5a.25.25 0 0 0-.25.25v6.5c0"
" .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-6.5ZM11 8.825l3.5 "
"2.1v-5.85l-3.5 2.1Z\"></path></svg> 观看演示"

#: ../../modules/generation.md:33 c6053cbc5eae4b948d090d62150f55fa
msgid "🔧 Functions"
msgstr "🔧 函数"

#: ../../modules/generation.md:35 8a9a4f9cb1024aa4b43a6d37ef9bac2d
msgid "You can find below all functions available in this module."
msgstr "您可以在下方找到此模块中的所有可用函数。"

#: ../../modules/generation.md ../../modules/generation.md:39
#: 75235df5fdab44218dc152d6e52f58cd c7a6d78a80f341c091076e4b63bd3af8
msgid "Shape 2D"
msgstr "二维平面形状"

#: ../../modules/generation.md:47 a72bcd877adf4808b134d790166bbb4b
msgid ""
"Generate a shape in 2D space at the specified origin, with the callback "
"executed at each step, allowing the user to handle the X and Y "
"coordinates directly."
msgstr "以指定位置为原点遍历二维平面。每一步运行都有回调，用户可以直接在回调中操作 X 和 Y 坐标。"

#: ../../modules/generation.md:49 ../../modules/generation.md:77
#: ../../modules/generation.md:108 4d6c0f7d164648b39eb616191dc87cf3
#: bc151556978f492da84f4bf38aecd37e d75445b29b82462799df2cb14db8584c
msgid "Inputs"
msgstr "输入"

#: ../../modules/generation.md:50 ../../modules/generation.md:78
#: ../../modules/generation.md:109 b7975d89ca9c42f6a8dc61de88d5d43c
#: bd2c0eab17774b168628297b4ba6488e eb00eea6317642abb691aba8445c3606
msgid ""
"**Execution `at <entity>` or `positioned <x> <y> <z> rotated <rot>`**: "
"Origin of the shape."
msgstr "**执行 `at <实体>` 或 `positioned <x> <y> <z> rotated <rot>`**：形状的原点。"

#: ../../modules/generation.md:52 ../../modules/generation.md:80
#: ../../modules/generation.md:111 06a785778ead4553a0b10d5e8622d3aa
#: 40ba35ec3630412d9ea3a05dcb288ac8 44c554a1d3f04859b1574d3d9f9364c4
msgid "**Function macro**:"
msgstr "**函数宏**："

#: ../../modules/generation.md:54 ../../modules/generation.md:82
#: ../../modules/generation.md:113 7cb55ca6d2c34ef1bf574452e2f20d2d
#: 984022d7206d45d9a29c36ed1431e78f c5113798af0c4f2e874fa0314bed4797
#, python-brace-format
msgid "{nbt}`compound` Arguments"
msgstr ""

#: ../../modules/generation.md:55 ../../modules/generation.md:83
#: ../../modules/generation.md:114 36c4067b90014d8daf8de545a6d08741
#: 517e8e50f6484859894ba38ab318260d aba89a75c3ad4ed990e72a135887a3b4
#, python-brace-format
msgid ""
"{nbt}`string` **run**: Callback to run at each step. For each step, the "
"following scores can be used:"
msgstr ""

#: ../../modules/generation.md:56 ../../modules/generation.md:85
#: ../../modules/generation.md:116 1ddcec2b94f14c8b8b7687fc58bc099a
#: 6e320842b330486aa3d8f930f63826cd 7bdf5dba591042889801bfed8d6cb734
msgid "**`$generation.x bs.lambda`**: The X coordinate of the current step."
msgstr ""

#: ../../modules/generation.md:57 ../../modules/generation.md:86
#: ../../modules/generation.md:117 4af5d4e58f1d4510b4ab724a075d6727
#: 799b3e966f69433a97ca0fc86d5e7bbd a42a9e5d61a54d92b39135a888525acb
msgid "**`$generation.y bs.lambda`**: The Y coordinate of the current step."
msgstr ""

#: ../../modules/generation.md:58 ../../modules/generation.md:87
#: ../../modules/generation.md:118 06faa404a22343c281e3c0ee3fe34f1c
#: b0b2ef5daaa94ecf8b8b196114577647 c57e9404ec474146b5f11fb01a0fe41b
#, python-brace-format
msgid "{nbt}`int` **width**: Width of the shape to generate."
msgstr ""

#: ../../modules/generation.md:59 ../../modules/generation.md:88
#: ../../modules/generation.md:119 051e45d0d5af483bb3d6af5c013a1870
#: 484f4a48806246398cc5eeb5d298a189 510feaf269cb4be4bdc4ce4f0fb2a988
#, python-brace-format
msgid "{nbt}`int` **height**: Height of the shape to generate."
msgstr ""

#: ../../modules/generation.md:60 ../../modules/generation.md:89
#: ../../modules/generation.md:120 095a04e680074ab89713bd1dbd446025
#: 67af380080f8479784f6865db024b82c 84e7c952f7f24450a3e749605525fd13
#, python-brace-format
msgid "{nbt}`compound` **with**: Shape settings."
msgstr ""

#: ../../modules/generation.md:61 ../../modules/generation.md:90
#: ../../modules/generation.md:121 a3a59f319c3f4f289a7e15db26d5e27e
#: c0b351538ea64c8dab8e8dc04259eca1 c38dec379c9740db83f5fb7443f8ebca
#, python-brace-format
msgid ""
"{nbt}`string` **direction**: Plane used to generate the shape (`xz`, "
"`xy`, or `zy`, default: `xz`)."
msgstr ""

#: ../../modules/generation.md:62 ../../modules/generation.md:91
#: ../../modules/generation.md:122 2b087ed1c91c49edb337bbd4ef851b12
#: 2eebfb82903e43ec8ba631c959f78ef6 37e4099c904f4a3ea911c5a62f918bc9
#, python-brace-format
msgid ""
"{nbt}`int` **spacing**: Distance between blocks in the generated shape "
"(default: 1)."
msgstr ""

#: ../../modules/generation.md:63 ../../modules/generation.md:92
#: ../../modules/generation.md:123 101c4651c3bc43fa9ac797af524bb0a5
#: af661e3a87fd4f96ab801ee03a6bb9f1 f276514e0e5b4590a5099234c0948ab9
#, python-brace-format
msgid ""
"{nbt}`int` **limit**: Limit how many steps are executed in a single tick "
"(default: 256)."
msgstr ""

#: ../../modules/generation.md:66 ../../modules/generation.md:97
#: ../../modules/generation.md:131 347cb333581146dabb1b2d9cbd53120e
#: 36bb2aed85884b83b4acf4ddc3a6e858 f7191e292c004066941e692f2a773859
msgid "Outputs"
msgstr "输出"

#: ../../modules/generation.md:67 ../../modules/generation.md:98
#: ../../modules/generation.md:132 5c9d3b7c8be84881be9538165d6165a5
#: 77513497120b4252826cfb118dd40772 df0efa673cb7407fbdeed5de93423d60
msgid ""
"**State**: The callback gets executed at the appropriate coordinates in "
"the world."
msgstr "**状态**：回调在世界中的适当坐标处执行。"

#: ../../modules/generation.md f9067ef9e3f149098154480e7e021824
msgid "Simplex Shape 2D"
msgstr "单纯二维形状"

#: ../../modules/generation.md:75 50a6fdf022984f2fb1ef6fa516a0fe35
msgid ""
"Generate a shape in 2D space using a Simplex noise algorithm. The shape "
"is generated at the specified origin, with the callback executed at each "
"step to facilitate custom behavior during the generation process."
msgstr "以指定位置为原点，使用单纯形噪声算法，在二维平面上生成形状。每一步生成都有回调，可以在这个过程中自定义行为。"

#: ../../modules/generation.md:84 ../../modules/generation.md:115
#: 776b301b46624f5f8e1ca528ea9de594 b655dcba628b4f24907770202b7354cd
msgid ""
"**`$generation.noise bs.lambda`**: The noise value in the range [-1000, "
"1000]."
msgstr ""

#: ../../modules/generation.md:93 ../../modules/generation.md:124
#: 12dbcdb459c54809b55b03ba450d96fe 89c6d93ea9104dfea0610cb5f5158a4a
#, python-brace-format
msgid ""
"{nbt}`int` **size**: Granularity of the noise. Lower values increase "
"detail (default: 32)."
msgstr ""

#: ../../modules/generation.md:94 ../../modules/generation.md:125
#: 18e77f8351ea41648904afc81ee3cd54 c91645b1984347b5820c31946fb42b9e
#, python-brace-format
msgid ""
"{nbt}`int` **seed**: Seed for the noise generation, allowing for "
"reproducibility (default: random)."
msgstr ""

#: ../../modules/generation.md adbbc01eea8043c0bad845a298d8ee3e
msgid "Fractal Shape 2D"
msgstr "分形二维形状"

#: ../../modules/generation.md:106 6a32eb8bba334c869b103dc2e4b5ffdc
msgid ""
"Generate a shape in 2D space using a Fractal noise algorithm. The shape "
"is generated at the specified origin, with the callback executed at each "
"step to facilitate custom behavior during the generation process."
msgstr "以指定位置为原点，使用分形噪声算法，在二维平面上生成形状。每一步生成都有回调，可以在这个过程中自定义行为。"

#: ../../modules/generation.md:126 dfabde327fb34378a823bc3e5480ca75
#, python-brace-format
msgid ""
"{nbt}`int` **octaves**: Number of noise layers; more octaves enhance "
"detail (default: 2)."
msgstr ""

#: ../../modules/generation.md:127 81c35a4e615545a786a1942d0b72e6ea
#, python-brace-format
msgid ""
"{nbt}`double` **persistence**: Contribution of each octave. Higher means "
"more detail (default: 0.5)."
msgstr ""

#: ../../modules/generation.md:128 15a209fc8fd2473b9f1928643918d823
#, python-brace-format
msgid ""
"{nbt}`double` **lacunarity**: Frequency increase for each octave. Higher "
"means more rapid frequency increase (default: 2.0)."
msgstr ""

#: ../../modules/generation.md:137 1f81b473306c4b4fbe6213a15511a8ba
msgid ""
"*Example: Generate a 3D terrain using a heightmap. This function employs "
"a linear approach; for more interesting terrain, consider scaling the "
"noise values differently according to various ranges. Check out [this "
"video](https://www.youtube.com/watch?v=CSa5O6knuwI) for more insights on "
"terrain generation:*"
msgstr "*示例：使用高度图生成3D地形。此函数采用线性方法；为了生成更有趣的地形，考虑根据不同范围对噪声值进行缩放。查看[此视频](https://www.youtube.com/watch?v=CSa5O6knuwI)以获取有关地形生成的更多见解：*"

#: ../../modules/generation.md:152 7a1120b6e9764b01a2165283d23c746f
msgid "**Credits**: Aksiome"
msgstr "**制作人员**：Aksiome"

#: ../../_templates/comments.md:4 49ef9f7fbe984057b924f2857cdf8dd3
msgid "**💬 Did it help you?**"
msgstr "**💬 这对您有帮助吗？**"

#: ../../_templates/comments.md:6 b15f576a185d4fa790cd77595580a847
msgid "Feel free to leave your questions and feedback below!"
msgstr "欢迎在下方留下您的问题和反馈！"

